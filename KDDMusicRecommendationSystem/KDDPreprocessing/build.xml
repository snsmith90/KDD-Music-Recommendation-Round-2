<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<!-- WARNING: Eclipse auto-generated file.
              Any modifications will be overwritten.
              To include a user specific buildfile here, simply create one in the same
              directory with the processing instruction <?eclipse.ant.import?>
              as the first entry and export the buildfile again. -->
<project basedir="." default="build" name="KDDPreprocessing">
    <property environment="env"/>
    <property name="KDDTypes.location" value="../KDDTypes"/>
    <property name="debuglevel" value="source,lines,vars"/>
    <property name="target" value="1.5"/>
    <property name="source" value="1.5"/>
    <!-- Added by Maha -->
    <fileset dir="" id="clspth">
      <include name="../KDDTypes/src/java/main/*" />
      <exclude name="" />
    </fileset> 
 
    <path id="Maven Dependencies.libraryclasspath"/>
    <path id="KDDTypes.classpath">
        <pathelement location="${KDDTypes.location}/target/classes"/>
        <pathelement location="${KDDTypes.location}/target/test-classes"/>
        <path refid="Maven Dependencies.libraryclasspath"/>
        <pathelement location="${KDDTypes.location}/../../../../hadoop-0.20.2/hadoop-0.20.2-core.jar"/>
        <pathelement location="${KDDTypes.location}/../../../../hadoop-0.20.2/lib/log4j-1.2.15.jar"/>
        <pathelement location="${KDDTypes.location}/../../../../hadoop-0.21.0/lib/cloud9-1.3.2.jar"/>
    </path>
    <path id="KDDPreprocessing.classpath">
        <pathelement location="target/classes"/>
        <pathelement location="target/test-classes"/>
        <path refid="Maven Dependencies.libraryclasspath"/>
        <pathelement location="../../../../hadoop-0.20.2/hadoop-0.20.2-core.jar"/>
        <pathelement location="../../../../hadoop-0.20.2/lib/log4j-1.2.15.jar"/>
        <pathelement location="../../../../hadoop-0.20.2/lib/jetty-6.1.14.jar"/>
        <pathelement location="../../../../hadoop-0.20.2/lib/commons-logging-1.0.4.jar"/>
        <pathelement location="../../../../hadoop-0.20.2/lib/commons-cli-1.2.jar"/>
        <path refid="KDDTypes.classpath"/>
    </path>
    <target name="init">
        <mkdir dir="target/classes"/>
        <mkdir dir="target/test-classes"/>
        <copy includeemptydirs="false" todir="target/classes">
            <fileset dir="src/main/java">
                <exclude name="**/*.launch"/>
                <exclude name="**/*.java"/>
            </fileset>
        </copy>
        <copy includeemptydirs="false" todir="target/classes">
            <fileset dir="src/main/resources">
                <exclude name="**/*.launch"/>
                <exclude name="**/*.java"/>
                <exclude name="**"/>
            </fileset>
        </copy>
        <copy includeemptydirs="false" todir="target/test-classes">
            <fileset dir="src/test/java">
                <exclude name="**/*.launch"/>
                <exclude name="**/*.java"/>
            </fileset>
        </copy>
        <copy includeemptydirs="false" todir="target/test-classes">
            <fileset dir="src/test/resources">
                <exclude name="**/*.launch"/>
                <exclude name="**/*.java"/>
                <exclude name="**"/>
            </fileset>
        </copy>
    </target>
<target name="jar">
    <jar destfile="jar/II.jar" basedir="target">
      <fileset refid="clspth" />
        <manifest>
            <attribute name="Main-Class" value="InvertedIndexing.SongInvertedIndex"/>
        </manifest>
    </jar>
</target>

    <target name="clean">
        <delete dir="target/classes"/>
        <delete dir="target/test-classes"/>
    </target>

    <target depends="clean" name="cleanall">
        <ant antfile="build.xml" dir="${KDDTypes.location}" inheritAll="false" target="clean"/>
    </target>
    <target depends="build-subprojects,build-project" name="build"/>
    <target name="build-subprojects">
        <ant antfile="build.xml" dir="${KDDTypes.location}" inheritAll="false" target="build-project">
            <propertyset>
                <propertyref name="build.compiler"/>
            </propertyset>
        </ant>
    </target>
    <target depends="init" name="build-project">
        <echo message="${ant.project.name}: ${ant.file}"/>
        <javac debug="true" debuglevel="${debuglevel}" destdir="target/classes" source="${source}" target="${target}">
            <src path="src/main/java"/>
            <classpath refid="KDDPreprocessing.classpath"/>
        </javac>
        <javac debug="true" debuglevel="${debuglevel}" destdir="target/classes" source="${source}" target="${target}">
            <src path="src/main/resources"/>
            <exclude name="**"/>
            <classpath refid="KDDPreprocessing.classpath"/>
        </javac>
        <javac debug="true" debuglevel="${debuglevel}" destdir="target/test-classes" source="${source}" target="${target}">
            <src path="src/test/java"/>
            <classpath refid="KDDPreprocessing.classpath"/>
        </javac>
        <javac debug="true" debuglevel="${debuglevel}" destdir="target/test-classes" source="${source}" target="${target}">
            <src path="src/test/resources"/>
            <exclude name="**"/>
            <classpath refid="KDDPreprocessing.classpath"/>
        </javac>
    </target>
    <target description="Build all projects which reference this project. Useful to propagate changes." name="build-refprojects"/>
    <target description="copy Eclipse compiler jars to ant lib directory" name="init-eclipse-compiler">
        <copy todir="${ant.library.dir}">
            <fileset dir="${ECLIPSE_HOME}/plugins" includes="org.eclipse.jdt.core_*.jar"/>
        </copy>
        <unzip dest="${ant.library.dir}">
            <patternset includes="jdtCompilerAdapter.jar"/>
            <fileset dir="${ECLIPSE_HOME}/plugins" includes="org.eclipse.jdt.core_*.jar"/>
        </unzip>
    </target>
    <target description="compile project with Eclipse compiler" name="build-eclipse-compiler">
        <property name="build.compiler" value="org.eclipse.jdt.core.JDTCompilerAdapter"/>
        <antcall target="build"/>
    </target>
</project>
